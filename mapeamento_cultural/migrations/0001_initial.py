# Generated by Django 3.2.13 on 2022-07-22 17:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mapeamento_cultural.validations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area_Atuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Enquadramento_Atuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enquadramento', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Forma_insercao_Atuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forma', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Publico_Atuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publico', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='TiposContratação',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[mapeamento_cultural.validations.validate_CPF], verbose_name='CPF:')),
                ('data_nascimento', models.DateField(verbose_name='Data Nascimento')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email:')),
                ('endereco', models.CharField(max_length=40, verbose_name='Endereço:')),
                ('dt_inclusao', models.DateTimeField(auto_now_add=True, verbose_name='Dt. Inclusão')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InformacoesExtras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_artista', models.CharField(blank=True, max_length=20)),
                ('endereco', models.CharField(blank=True, max_length=150, verbose_name='Endereço')),
                ('qnt', models.CharField(blank=True, choices=[('0', '0 a 10'), ('1', '11 a 20'), ('2', '21 a 30'), ('3', '31 a 40'), ('4', '41 a 50'), ('5', 'Mais de 50')], max_length=1, verbose_name='Quantidade de pessoas que fazem parte da instituição')),
                ('status', models.CharField(blank=True, choices=[('p', 'Principal (maior fonte de renda/profissão)'), ('s', 'Secundaria (renda extra, ou prática sem fins lucrativos como lazer)')], max_length=1, verbose_name='Status da atividade')),
                ('instagram', models.CharField(blank=True, max_length=150)),
                ('facebook', models.CharField(blank=True, max_length=150)),
                ('youtube', models.CharField(blank=True, max_length=150)),
                ('complete', models.BooleanField(default=False)),
                ('area', models.ManyToManyField(blank=True, to='mapeamento_cultural.Area_Atuacao', verbose_name='Áreas culturais de atuação')),
                ('enquadramento', models.ManyToManyField(blank=True, to='mapeamento_cultural.Enquadramento_Atuacao', verbose_name='Enquadramento da instituição/entidade/coletivo/grupo')),
                ('forma_atuacao', models.ManyToManyField(blank=True, to='mapeamento_cultural.Forma_insercao_Atuacao', verbose_name='Formar de inserção da atividade artístico-cultural')),
                ('publico', models.ManyToManyField(blank=True, to='mapeamento_cultural.Publico_Atuacao', verbose_name='Públicos que participam das ações')),
            ],
        ),
        migrations.CreateModel(
            name='Artista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fazedor_cultura', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome artístico')),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=11)),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição resumida da atividade artística/culturais desenvolvidas')),
                ('file_cpf', models.FileField(blank=True, null=True, upload_to='file_cpf', verbose_name='CPF')),
                ('file_comprovante_residencia', models.FileField(blank=True, null=True, upload_to='file_comprovantes_residencia', verbose_name='Comprovante de residência')),
                ('pis', models.CharField(blank=True, max_length=80, null=True, verbose_name='PIS/PASEP/NIT')),
                ('file_pis', models.FileField(blank=True, null=True, upload_to='file_pis', verbose_name='PIS/PASEP/NIT')),
                ('banco', models.CharField(blank=True, default='', max_length=3, null=True, verbose_name='Banco (Conta Corrente):')),
                ('agencia', models.CharField(blank=True, default='', max_length=4, null=True, verbose_name='Agência:')),
                ('n_conta', models.CharField(blank=True, default='', max_length=8, null=True, verbose_name='Número da conta')),
                ('comprovante_de_cc', models.FileField(blank=True, null=True, upload_to='file_comprovante_cc', verbose_name='Comprovante de número de conta corrente (banco, agência e nº da conta)')),
                ('declaracao_n_viculo', models.FileField(blank=True, null=True, upload_to='file_declaracao_n_vinculo', verbose_name='Declaração de não vínculo com a Administração Federal, Estadual e Municipal')),
                ('comprovante_iss', models.FileField(blank=True, null=True, upload_to='file_comprovante_iss', verbose_name='Comprovante de inscrição do ISS Municipal')),
                ('comprovante_recibos', models.FileField(blank=True, null=True, upload_to='file_comprovante_recibos', verbose_name='Recibos, contratos ou notas que comprovem cachê')),
                ('cadastro_completo', models.BooleanField(default=False)),
                ('fazedor_cultura_cnpj', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome fantasia')),
                ('cnpj', models.CharField(max_length=18, null=True, validators=[mapeamento_cultural.validations.validate_CNPJ], verbose_name='CNPJ')),
                ('cpf_responsavel', models.CharField(blank=True, max_length=14, null=True, validators=[mapeamento_cultural.validations.validate_CPF], verbose_name='CPF do responsável')),
                ('file_cnpj', models.FileField(blank=True, null=True, upload_to='file_cnpj', verbose_name='CNPJ - Documento scaneado evidenciando cadastro em atividades da àrea cultural')),
                ('prova_inscricao_PJ_nacional', models.FileField(blank=True, null=True, upload_to='prova_inscricao_PJ_nacional', verbose_name='Prova de inscrição no Cadastro Nacional de Pessoa Jurídica')),
                ('certidao_negativa_debitos_relativos', models.FileField(blank=True, null=True, upload_to='certidao_negativa_debitos_relativos', verbose_name='Certidão Negativa de Débitos Relativos a Tribunais Federais e à Divida Ativa da União')),
                ('certidao_regularidade_icms', models.FileField(blank=True, null=True, upload_to='certidao_regularidade_icms', verbose_name='Certidão de Regularidade de Tribunais Estaduais (ICMS)')),
                ('certidao_regularidade_iss', models.FileField(blank=True, null=True, upload_to='certidao_regularidade_iss', verbose_name='Certidão de Regularidade de Tribunais Municipais (ISS)')),
                ('certidao_negativa_debitos', models.FileField(blank=True, null=True, upload_to='certidao_negativa_debitos', verbose_name='Certidão Negativa de Débitos')),
                ('certidao_regularidade_situacao', models.FileField(blank=True, null=True, upload_to='certidao_de_regularidade_de_situacao', verbose_name='Certidão de REgularidade de Situação')),
                ('certidao_negativa_debitos_trabalhistas', models.FileField(blank=True, null=True, upload_to='certidao_debitos_trabalhistas_cndt', verbose_name='Certidão de Negativa de Débitos Trabalhistas - CDNT')),
                ('documento_empresario_exclusivo', models.FileField(blank=True, null=True, upload_to='documento_empresario_exclusivo', verbose_name="Documento que comprove que o prestador é exclusivo do 'fazedor de cultura' em questão.*")),
                ('dt_inclusao', models.DateTimeField(auto_now_add=True, verbose_name='Dt. Inclusão')),
                ('area', models.ManyToManyField(blank=True, null=True, to='mapeamento_cultural.Area_Atuacao', verbose_name='Principal área de atuação')),
                ('tipo_contratacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mapeamento_cultural.tiposcontratação', verbose_name='Tipo de contratação')),
                ('user_responsavel', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
